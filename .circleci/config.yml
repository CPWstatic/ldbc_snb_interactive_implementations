version: 2.1
orbs:
  slack: circleci/slack@3.4.2
workflows:
  version: 2
  build:
    jobs:
      - test

jobs:
  test:
    resource_class: xlarge
    machine:
      image: ubuntu-2004:202008-01
    steps:
      - checkout
      ### DuckDB
      - run:
          name: Install DuckDB binary
          command: |
            duckdb/scripts/get.sh
      - run:
          name: Build project
          command: ./build.sh
      - run:
          name: Tiny data set - Load DuckDB
          command: |
            cd duckdb
            export DUCKDB_CSV_DIR=`pwd`/../postgres/test-data
            scripts/load.sh
            cd ..
      ### Neo4j
      - run:
          name: Tiny data set - Load Neo4j database and create a backup
          command: |
            cd cypher
            export NEO4J_VANILLA_CSV_DIR=`pwd`/test-data/vanilla/
            export NEO4J_CONVERTED_CSV_DIR=`pwd`/test-data/converted/
            scripts/load-in-one-step.sh
            scripts/backup-database.sh
            cd ..
      - run:
          name: Tiny data set - Create validation parameters with Neo4j project
          command: |
            cd cypher
            driver/create-validation-parameters.sh
            mv validation_params.csv validation_params_cypher_tiny.csv
            cd ..
      ### PostgreSQL
      - run:
          name: Install PostgreSQL dependencies
          command: |
            postgres/scripts/install-dependencies.sh
      - run:
          name: Tiny data set - Load PostgreSQL database and create a backup
          command: |
            cd postgres
            export POSTGRES_CSV_DIR=`pwd`/test-data/
            scripts/load-in-one-step.sh
            scripts/backup-database.sh
            cd ..
      - run:
          name: Tiny data set - Create validation parameters with PostgreSQL
          command: |
            cd postgres
            driver/create-validation-parameters.sh
            mv validation_params.csv validation_params_postgres_tiny.csv
            cd ..
      ### Neo4j
      - run:
          name: Tiny data set - Cross-validate the Neo4j project based on the results from PostgreSQL
          command: |
            mv postgres/validation_params_postgres_tiny.csv cypher/validation_params.csv
            cd cypher
            scripts/restore-database.sh
            driver/validate.sh | tee validation-log.txt
            grep 'Validation Result: PASS' validation-log.txt
            cd ..
      - run:
          name: Tiny data set - Benchmark Neo4j
          command: |
            cd cypher
            scripts/restore-database.sh
            driver/benchmark.sh
            cd ..
      ### PostgreSQL
      - run:
          name: Tiny data set - Cross-validate the PostgreSQL project based on the results from Neo4j
          command: |
            mv cypher/validation_params_cypher_tiny.csv postgres/validation_params.csv
            cd postgres
            scripts/restore-database.sh
            driver/validate.sh | tee validation-log.txt
            grep 'Validation Result: PASS' validation-log.txt
            cd ..
      - run:
          name: Tiny data set - Benchmark PostgreSQL
          command: |
            cd postgres
            scripts/restore-database.sh
            driver/benchmark.sh
            cd ..
      ## SF1 tests
      - run:
          name: Download SF1 data set
          command: |
            wget https://surfdrive.surf.nl/files/index.php/s/Ar7kacLw3LVzQaf/download --quiet --output-document=sf1.zip
            unzip sf1.zip
            # substitution parameters and updateStreams for Neo4j
            cp ./sf1/substitution_parameters/* ./cypher/test-data/substitution_parameters/
            cp ./sf1/social_network-csv_composite/updateStream* ./cypher/test-data/update_streams/
      - run:
          name: SF1 data set - Load Neo4j database
          command: |
            cd cypher
            export NEO4J_VANILLA_CSV_DIR=`pwd`/../sf1/social_network-csv_composite
            export NEO4J_CONVERTED_CSV_DIR=`pwd`/../sf1/social_network-csv_composite-converted
            mkdir ${NEO4J_CONVERTED_CSV_DIR}
            scripts/load-in-one-step.sh
            cd ..
      - run:
          name: SF1 data set - Create validation parameters with Neo4j
          command: |
            cd cypher
            driver/create-validation-parameters.sh
            mv validation_params.csv validation_params_cypher_sf1.csv
            cd ..
      - run:
          name: SF1 data set - Load PostgreSQL database
          command: |
            cd postgres
            export POSTGRES_CUSTOM_CONFIGURATION=`pwd`/config/postgresql.conf
            export POSTGRES_CSV_DIR=`pwd`/../sf1/social_network-csv_merge_foreign
            scripts/start.sh
            scripts/create-db.sh
            scripts/load.sh
            cd ..
      - run:
          name: SF1 data set - Cross-validate the PostgreSQL project based on the results from Neo4j
          command: |
            mv cypher/validation_params_cypher_sf1.csv postgres/validation_params.csv
            cd postgres
            driver/validate.sh | tee validation-log.txt
            grep 'Validation Result: PASS' validation-log.txt
            cd ..
      - slack/status
